#include <stdio.h>

void sortDescending(int arr[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = i + 1; j < n; j++) {
            if (arr[i] < arr[j]) {
                int temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }
}

void sortAscending(int arr[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = i + 1; j < n; j++) {
            if (arr[i] > arr[j]) {
                int temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }
}

void sortOddEven(int arr[], int n) {
    int odd[n], even[n], oddCount = 0, evenCount = 0;

    // Separate odd and even numbers
    for (int i = 0; i < n; i++) {
        if (arr[i] % 2 == 0) even[evenCount++] = arr[i];
        else odd[oddCount++] = arr[i];
    }

    printf("Odd Before Sorting: ");
    for (int i = 0; i < oddCount; i++) printf("%d ", odd[i]);
    printf("\n");

    printf("Even Before Sorting: ");
    for (int i = 0; i < evenCount; i++) printf("%d ", even[i]);
    printf("\n");

    // Sort separately
    sortDescending(odd, oddCount);
    sortAscending(even, evenCount);

    printf("Odd After Sorting: ");
    for (int i = 0; i < oddCount; i++) printf("%d ", odd[i]);
    printf("\n");

    printf("Even After Sorting: ");
    for (int i = 0; i < evenCount; i++) printf("%d ", even[i]);
    printf("\n");

    // Merge back
    int k = 0;
    for (int i = 0; i < oddCount; i++) arr[k++] = odd[i];
    for (int i = 0; i < evenCount; i++) arr[k++] = even[i];
}

int main() {
    int arr[] = {1, 2, 3, 5, 4, 7, 10};
    int n = sizeof(arr) / sizeof(arr[0]);

    sortOddEven(arr, n);

    printf("Final Sorted Array: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }

    return 0;
}
