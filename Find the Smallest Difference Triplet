
#include <stdio.h>
#include <stdlib.h>

void findSmallestDifferenceTriplet(int arr1[], int arr2[], int arr3[], int n) {
    // Sort all three arrays using basic sorting
    for (int i = 0; i < n - 1; i++) {
        for (int j = i + 1; j < n; j++) {
            if (arr1[i] > arr1[j]) { int temp = arr1[i]; arr1[i] = arr1[j]; arr1[j] = temp; }
            if (arr2[i] > arr2[j]) { int temp = arr2[i]; arr2[i] = arr2[j]; arr2[j] = temp; }
            if (arr3[i] > arr3[j]) { int temp = arr3[i]; arr3[i] = arr3[j]; arr3[j] = temp; }
        }
    }

    int i = 0, j = 0, k = 0;
    int minDiff = arr1[0] + arr2[0] + arr3[0];  // Initialize with the first triplet sum
    int sumMin = minDiff;
    int res1 = arr1[0], res2 = arr2[0], res3 = arr3[0];

    while (i < n && j < n && k < n) {
        int maxVal = arr1[i];
        if (arr2[j] > maxVal) maxVal = arr2[j];
        if (arr3[k] > maxVal) maxVal = arr3[k];

        int minVal = arr1[i];
        if (arr2[j] < minVal) minVal = arr2[j];
        if (arr3[k] < minVal) minVal = arr3[k];

        int diff = maxVal - minVal;
        int sum = arr1[i] + arr2[j] + arr3[k];

        if (diff < minDiff || (diff == minDiff && sum < sumMin)) {
            minDiff = diff;
            sumMin = sum;
            res1 = arr1[i], res2 = arr2[j], res3 = arr3[k];
        }

        // Move the pointer of the smallest value
        if (arr1[i] == minVal) i++;
        else if (arr2[j] == minVal) j++;
        else k++;
    }

    printf("%d, %d, %d\n", res1, res2, res3);
}

int main() {
    int arr1[] = {5, 2, 8};
    int arr2[] = {10, 7, 12};
    int arr3[] = {9, 14, 6};
    int n = 3;

    findSmallestDifferenceTriplet(arr1, arr2, arr3, n);
    return 0;
}
